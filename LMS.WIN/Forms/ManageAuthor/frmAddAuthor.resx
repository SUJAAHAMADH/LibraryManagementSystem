<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbLibrary.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>